{"ast":null,"code":"var _jsxFileName = \"/home/hamid/Desktop/CA8-Front/src/Movie/CommentsBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { addComment, postMovieCommentRate } from \"../Services/Comment\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CommentsBox(props) {\n  const changeComments = (comment, i) => {\n    let newComments = [...props.comments];\n    newComments[i] = comment;\n    props.setComments(newComments);\n  };\n\n  let commentItems = [];\n\n  for (let i = 0; i < props.comments.length; i++) commentItems.push(CommentItem(props.comments[i], changeComments, i));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \" \\u062F\\u06CC\\u062F\\u06AF\\u0627\\u0647 \\u0647\\u0627 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: [/*#__PURE__*/_jsxDEV(NewComment, {\n        setComments: props.setComments,\n        comments: props.comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), commentItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_c = CommentsBox;\n\nfunction NewComment(props) {\n  _s();\n\n  const [comment, setComment] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = e => {\n    e.preventDefault();\n    setComment(e.target.value);\n  };\n\n  const {\n    movieId\n  } = useParams();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    addComment(movieId, comment).then(res => {\n      let newComments = [...props.comments];\n      newComments.push(res);\n      props.setComments(newComments);\n      setLoading(false);\n    }).catch(error => {\n      if (error.response) console.log(error.response.data);else console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" \\u062F\\u06CC\\u062F\\u06AF\\u0627\\u0647 \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0627\\u0636\\u0627\\u0641\\u0647 \\u06A9\\u0646\\u06CC\\u062F: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"hor-line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"comment-form\",\n          action: \"/action_page.php\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"com-txt\",\n            id: \"com-txt\",\n            name: \"text\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            value: \"\\u062B\\u0628\\u062A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewComment, \"wDzN6L10CgoKuLPhscErwFkWIfU=\", false, function () {\n  return [useParams];\n});\n\n_c2 = NewComment;\n\nfunction CommentItem(comment, changeComment, index) {\n  const callChangeComment = newComment => {\n    changeComment(newComment, index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"commenter-name\",\n      children: [\" \", comment.username, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"hor-line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", comment.text, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CommentRate, {\n          comment: comment,\n          changeComment: callChangeComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-score\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: comment.commentLike\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: comment.commentDislike\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = CommentItem;\n\nfunction CommentRate(props) {\n  const updateLike = like => {\n    const userId = JSON.parse(localStorage.getItem(\"user\")).email;\n    postMovieCommentRate(props.comment.movieId, userId, props.comment.commentId, like).then(res => {\n      props.changeComment(res);\n    }).catch(error => {\n      if (error.response) console.log(error.response.data);else console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rate-icon\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => updateLike(\"1\"),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"iconify like-icon\",\n        \"data-icon\": \"eva:arrow-ios-upward-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => updateLike(\"-1\"),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"iconify dislike-icon\",\n        \"data-icon\": \"eva:arrow-ios-upward-fill\",\n        \"data-rotate\": \"180deg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n\n_c4 = CommentRate;\nexport default CommentsBox;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CommentsBox\");\n$RefreshReg$(_c2, \"NewComment\");\n$RefreshReg$(_c3, \"CommentItem\");\n$RefreshReg$(_c4, \"CommentRate\");","map":{"version":3,"sources":["/home/hamid/Desktop/CA8-Front/src/Movie/CommentsBox.js"],"names":["React","useState","useParams","addComment","postMovieCommentRate","LoadingSpinner","CommentsBox","props","changeComments","comment","i","newComments","comments","setComments","commentItems","length","push","CommentItem","NewComment","setComment","loading","setLoading","handleChange","e","preventDefault","target","value","movieId","handleSubmit","then","res","catch","error","response","console","log","data","changeComment","index","callChangeComment","newComment","username","text","commentLike","commentDislike","CommentRate","updateLike","like","userId","JSON","parse","localStorage","getItem","email","commentId"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {addComment, postMovieCommentRate} from \"../Services/Comment\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\nfunction CommentsBox(props) {\n    const changeComments = (comment, i) => {\n        let newComments = [...props.comments];\n        newComments[i] = comment;\n        props.setComments(newComments);\n    }\n    let commentItems = []\n    for (let i=0; i<props.comments.length; i++)\n        commentItems.push(CommentItem(props.comments[i], changeComments, i));\n    return (\n        <div className=\"comments-box\">\n            <div className=\"title\"> دیدگاه ها </div>\n            <div className=\"comments-list\">\n                <NewComment setComments={props.setComments} comments={props.comments} />\n                {commentItems}\n            </div>\n        </div>\n    );\n\n}\n\nfunction NewComment(props) {\n    const [comment, setComment] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const handleChange = (e) => {\n        e.preventDefault();\n        setComment(e.target.value);\n    }\n    const {movieId} = useParams();\n    const handleSubmit =  (e) => {\n        e.preventDefault();\n        setLoading(true);\n        addComment(movieId, comment)\n            .then(res => {\n                let newComments = [...props.comments];\n                newComments.push(res);\n                props.setComments(newComments);\n                setLoading(false);\n            })\n            .catch(error => {\n                if (error.response)\n                    console.log(error.response.data);\n                else\n                    console.log(error);\n            })\n    }\n    return (\n        <div className=\"comment\">\n            <div className=\"comment-text\">\n                <p> دیدگاه خود را اضافه کنید: </p>\n                <hr className=\"hor-line\" />\n                {loading? (<LoadingSpinner />) : (\n                    <div>\n                        <form className=\"comment-form\" action=\"/action_page.php\" onSubmit={handleSubmit}>\n                            <input type=\"text\" className=\"com-txt\" id=\"com-txt\" name=\"text\" onChange={handleChange}/>\n                            <input type=\"submit\" className=\"submit-button\" value=\"ثبت\"/>\n                        </form>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nfunction CommentItem(comment, changeComment, index) {\n    const callChangeComment = (newComment) => {\n        changeComment(newComment, index);\n    }\n    return (\n        <div className=\"comments\">\n            <p className=\"commenter-name\"> {comment.username} </p>\n            <hr className=\"hor-line\" />\n            <div className=\"comment-body\">\n                <div><p> {comment.text} </p></div>\n                <div>\n                    <CommentRate comment={comment} changeComment={callChangeComment}/>\n                    <div className=\"comment-score\">\n                        <span>{comment.commentLike}</span>\n                        <span>{comment.commentDislike}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nfunction CommentRate(props) {\n    const updateLike = (like) => {\n        const userId = JSON.parse(localStorage.getItem(\"user\")).email;\n        postMovieCommentRate(props.comment.movieId, userId, props.comment.commentId, like)\n            .then(res => {\n                props.changeComment(res);\n            })\n            .catch(error => {\n                if (error.response)\n                    console.log(error.response.data);\n                else\n                    console.log(error);\n            })\n    }\n    return (\n        <div className=\"rate-icon\">\n            <div onClick={() => updateLike(\"1\")}>\n                <span className=\"iconify like-icon\" data-icon=\"eva:arrow-ios-upward-fill\"></span>\n            </div>\n            <div onClick={() => updateLike(\"-1\")}>\n                <span className=\"iconify dislike-icon\" data-icon=\"eva:arrow-ios-upward-fill\" data-rotate=\"180deg\"></span>\n            </div>\n        </div>\n    );\n}\n\nexport default CommentsBox;"]},"metadata":{},"sourceType":"module"}