{"ast":null,"code":"var _jsxFileName = \"/home/hamid/Desktop/CA8-Front/src/Movie/ActorsBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getMovieActors } from \"../Services/Movie\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ActorsBox(props) {\n  _s();\n\n  const [actors, setActors] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    getMovieActors(props.movieId).then(res => {\n      setActors(res);\n      setLoading(false);\n    }).catch(error => {\n      if (error.response) console.log(error.response.data);else console.log(error);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 16\n  }, this);\n  let actorItem = [];\n\n  for (let i = 0; i < actors.length; i++) {\n    actorItem.push(ActorItem(actors[i]));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"actors-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \" \\u0628\\u0627\\u0632\\u06CC\\u06AF\\u0631\\u0627\\u0646\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images-list\",\n      children: actorItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ActorsBox, \"/mi9ajB3NMh0QlpCuYGyprjmWp8=\");\n\n_c = ActorsBox;\n\nfunction ActorItem(actor) {\n  let url = \"/actors/\" + actor.id;\n  return /*#__PURE__*/_jsxDEV(\"a\", {\n    href: url,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actors-box-img-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actor-image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: actor.image,\n          alt: actor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actor-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay-text\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overlay-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", actor.name, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", actor.age, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = ActorItem;\nexport default ActorsBox;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ActorsBox\");\n$RefreshReg$(_c2, \"ActorItem\");","map":{"version":3,"sources":["/home/hamid/Desktop/CA8-Front/src/Movie/ActorsBox.js"],"names":["React","useEffect","useState","getMovieActors","LoadingSpinner","ActorsBox","props","actors","setActors","loading","setLoading","movieId","then","res","catch","error","response","console","log","data","actorItem","i","length","push","ActorItem","actor","url","id","image","name","age"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,cAAR,QAA6B,mBAA7B;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACAD,EAAAA,SAAS,CAAE,MAAM;AACbS,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAP,IAAAA,cAAc,CAACG,KAAK,CAACK,OAAP,CAAd,CACKC,IADL,CACUC,GAAG,IAAI;AACTL,MAAAA,SAAS,CAACK,GAAD,CAAT;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJL,EAKKI,KALL,CAKWC,KAAK,IAAI;AACZ,UAAIA,KAAK,CAACC,QAAV,EACIC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeG,IAA3B,EADJ,KAGIF,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACP,KAVL;AAWH,GAbQ,EAaP,EAbO,CAAT;AAcA,MAAGN,OAAH,EACI,oBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACJ,MAAIW,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACd,MAAM,CAACe,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAChCD,IAAAA,SAAS,CAACG,IAAV,CAAeC,SAAS,CAACjB,MAAM,CAACc,CAAD,CAAP,CAAxB;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBACKD;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA/BQf,S;;KAAAA,S;;AAiCT,SAASmB,SAAT,CAAmBC,KAAnB,EAA0B;AACtB,MAAIC,GAAG,GAAG,aAAaD,KAAK,CAACE,EAA7B;AACA,sBACI;AAAG,IAAA,IAAI,EAAED,GAAT;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,+BAAuC;AAAK,UAAA,GAAG,EAAED,KAAK,CAACG,KAAhB;AAAuB,UAAA,GAAG,EAAEH,KAAK,CAACI;AAAlC;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACI;AAAA,8BAAKJ,KAAK,CAACI,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,8BAAKJ,KAAK,CAACK,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;MAjBQN,S;AAmBT,eAAenB,SAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {getMovieActors} from \"../Services/Movie\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\nfunction ActorsBox(props) {\n    const [actors, setActors] = useState({});\n    const [loading, setLoading] = useState(true);\n    useEffect( () => {\n        setLoading(true);\n        getMovieActors(props.movieId)\n            .then(res => {\n                setActors(res);\n                setLoading(false);\n            })\n            .catch(error => {\n                if (error.response)\n                    console.log(error.response.data);\n                else\n                    console.log(error);\n            });\n    },[]);\n    if(loading)\n        return <LoadingSpinner />\n    let actorItem = [];\n    for (let i=0; i<actors.length; i++) {\n        actorItem.push(ActorItem(actors[i]));\n    }\n    return (\n        <div className=\"actors-box\">\n            <div className=\"title\"> بازیگران</div>\n            <div className=\"images-list\">\n                {actorItem}\n            </div>\n        </div>\n    );\n}\n\nfunction ActorItem(actor) {\n    let url = \"/actors/\" + actor.id;\n    return (\n        <a href={url}>\n            <div className=\"actors-box-img-container\">\n                <div className=\"actor-image-container\"><img src={actor.image} alt={actor.name}/></div>\n                <div className=\"actor-overlay\">\n                    <div className=\"overlay-text\">\n                        <div className=\"overlay-text\">\n                            <p> {actor.name} </p>\n                            <p> {actor.age} </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    );\n}\n\nexport default ActorsBox;"]},"metadata":{},"sourceType":"module"}